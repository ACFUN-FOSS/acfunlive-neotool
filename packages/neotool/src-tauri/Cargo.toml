[package]
name = "acfunlive-neotool"
version = "0.1.0"
description = "neo toolbox for AcFun live"
authors.workspace = true
license.workspace = true
repository = ""
default-run = "acfunlive-neotool"
edition.workspace = true
rust-version.workspace = true

[build-dependencies]
tauri-build = { version = "1.4.0", features = [] }

[dependencies]
serde.workspace = true
serde_json.workspace = true
tauri = { version = "1.4.1", features = [
  "devtools",
  "fs-all",
  "linux-protocol-headers",
  "path-all",
  "protocol-asset",
] }
tauri-plugin-acfunlive-neotool-base = { version = "0.1.0", path = "../../../plugins/base" }
tauri-plugin-acfunlive-neotool-keyboard = { version = "0.1.0", path = "../../../plugins/keyboard" }
tauri-plugin-acfunlive-neotool-serve-files = { version = "0.1.0", path = "../../../plugins/serve_files" }
tauri-plugin-websocket = { git = "https://github.com/orzogc/plugins-workspace.git", branch = "ac-live-fix" }

[features]
# this feature is used for production builds or when `devPath` points to the filesystem and the built-in dev server is disabled.
# If you use cargo directly instead of tauri's cli you can use this feature flag to switch between tauri's `dev` and `build` modes.
# DO NOT REMOVE!!
custom-protocol = ["tauri/custom-protocol"]
